"use strict";

var aws = require('aws-sdk');
var doc = require('dynamodb-doc');
var config = require('../../config');

aws.config.region = config.awsRegion;
var docClient = new doc.DynamoDB();

exports.filterByProductDescriptorId = function loadCloudDevicesByProductDescriptorFromDynamoDb(productDescriptorId, callback) {
    var params = {
        TableName: config.dynamoDb.tables.devices,
        KeyConditions : [
            docClient.Condition("productDescriptorId", "EQ", productDescriptorId)
        ]
    };
    docClient.query(params, function(err, results) {
        if (err) {
            callback(err);
        } else {
            callback(null, results.Items);
        }
    });
};

exports.findBy = function loadCloudDeviceFromDynamoDb(productDescriptorId, serialNumber, callback) {
    var params = {
        TableName: config.dynamoDb.tables.devices,
        Key : {
            productDescriptorId: productDescriptorId,
            serialNumber: serialNumber
        }
    };
    docClient.getItem(params,  function(err, results) {
        if (err) {
            callback(err);
        } else {
            callback(null, results.Item);
        }
    });
};

exports.addOrReplace = function saveCloudDeviceToDynamoDb(cloudDevice, callback) {
    var params = {
        TableName: config.dynamoDb.tables.devices,
        Item: cloudDevice
    };
    docClient.putItem(params, callback);
};

exports.removeById = function removeCloudDeviceFromDynamoDb(productDescriptorId, serialNumber, callback) {
    var params = {
        TableName: config.dynamoDb.tables.devices,
        Key : {
            productDescriptorId: productDescriptorId,
            serialNumber: serialNumber
        }
    };
    docClient.deleteItem(params, function (err) {
        if (err) {
            callback(err);
        } else {
            callback();
        }
    })
};