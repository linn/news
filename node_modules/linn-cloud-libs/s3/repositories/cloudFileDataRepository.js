"use strict";

var aws = require('aws-sdk');
var config = require('../../config');
var uuid = require('node-uuid');

aws.config.region = config.awsRegion;

var s3 = new aws.S3();

function generateUri(key) {
    return 'http://' + config.s3.buckets.fileData + ".s3.amazonaws.com/" + key;
}

function saveFileToS3(id, filename, buffer, callback) {
    var params = {
        Bucket: config.s3.buckets.fileData,
        Key: id,
        Body: buffer,
        ContentDisposition: 'attachment; filename=' + filename,
        Metadata: {
            'originalfilename': filename
        }
    };
    s3.putObject(params, function(err) {
        if (err) {
            callback(err);
        } else {
            callback(null, {
                key: params.Key,
                href: generateUri(params.Key)
            });
        }
    });
}

exports.addById = function addFileByIdToS3(id, filename, buffer, callback) {
    saveFileToS3(id, filename, buffer, callback);
};

exports.add = function addFileToS3(filename, buffer, callback) {
    saveFileToS3(uuid.v1(), filename, buffer, callback);
};

exports.findById = function loadFileFromS3(id, callback) {
    var params = {
        Bucket: config.s3.buckets.fileData,
        Key: id
    };
    s3.getObject(params, function (err, results) {
        if (err) {
            callback(err);
        } else {
            callback(null, {
                filename: results.Metadata.originalfilename,
                data: results.Body
            });
        }
    });
};

exports.removeById = function removeFileFromS3(id, callback) {
    var params = {
        Bucket: config.s3.buckets.fileData,
        Key: id
    };
    s3.deleteObject(params, function (err) {
        if (err) {
            callback(err);
        } else {
            callback();
        }
    });
};